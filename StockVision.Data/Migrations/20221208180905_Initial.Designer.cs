// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockVision.Data.Data;

#nullable disable

namespace StockVision.Data.Migrations
{
    [DbContext(typeof(StockVisionContext))]
    [Migration("20221208180905_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockVision.Core.Models.AskOrderBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AskOrderBooks");
                });

            modelBuilder.Entity("StockVision.Core.Models.BidOrderBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BidOrderBooks");
                });

            modelBuilder.Entity("StockVision.Core.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderBookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("OrderBookId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("StockVision.Core.Models.OrderBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AskOrderBookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BidOrderBookId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AskOrderBookId")
                        .IsUnique();

                    b.HasIndex("BidOrderBookId")
                        .IsUnique();

                    b.ToTable("OrderBooks");
                });

            modelBuilder.Entity("StockVision.Core.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AskOrderBookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BidOrderBookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OrdersValue")
                        .HasPrecision(13, 4)
                        .HasColumnType("decimal(13,4)");

                    b.Property<decimal>("Price")
                        .HasPrecision(9, 4)
                        .HasColumnType("decimal(9,4)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SharePercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AskOrderBookId");

                    b.HasIndex("BidOrderBookId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("StockVision.Core.Models.Company", b =>
                {
                    b.HasOne("StockVision.Core.Models.OrderBook", "OrderBook")
                        .WithOne()
                        .HasForeignKey("StockVision.Core.Models.Company", "OrderBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderBook");
                });

            modelBuilder.Entity("StockVision.Core.Models.OrderBook", b =>
                {
                    b.HasOne("StockVision.Core.Models.AskOrderBook", "AskOrderBook")
                        .WithOne()
                        .HasForeignKey("StockVision.Core.Models.OrderBook", "AskOrderBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockVision.Core.Models.BidOrderBook", "BidOrderBook")
                        .WithOne()
                        .HasForeignKey("StockVision.Core.Models.OrderBook", "BidOrderBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AskOrderBook");

                    b.Navigation("BidOrderBook");
                });

            modelBuilder.Entity("StockVision.Core.Models.Order", b =>
                {
                    b.HasOne("StockVision.Core.Models.AskOrderBook", null)
                        .WithMany("Orders")
                        .HasForeignKey("AskOrderBookId");

                    b.HasOne("StockVision.Core.Models.BidOrderBook", null)
                        .WithMany("Orders")
                        .HasForeignKey("BidOrderBookId");
                });

            modelBuilder.Entity("StockVision.Core.Models.AskOrderBook", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("StockVision.Core.Models.BidOrderBook", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
